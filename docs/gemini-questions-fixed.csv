domain,topic,question_text,option_a,option_b,option_c,option_d,option_e,correct_answer,explanation
Java Basics,Class Structure,What is the minimum requirement for a Java source file to compile and run successfully?,It must contain a public class with a main method.,It must contain a class with a main method.,It must contain a public static void main(String args) method.,It must contain at least one class definition.,It must have a package declaration.,B,"A Java source file only needs to contain a class with a main method to compile and run. The class does not necessarily have to be public, nor does it need a package declaration if it's in the default package."
Java Basics,Main Method,What will be the outcome when this code is executed: public class Test { public static long main(String args) { System.out.println(""Hello""); return 10L; } }?,Hello,It will not print anything.,It will not compile.,It will throw an Error at runtime.,None of the above.,D,"The JVM looks for a main() method with the signature 'public static void main(String args)'. The main() method in the given code has a return type of 'long' instead of 'void'. Because the JVM cannot find the expected main method signature, it will throw a java.lang.NoSuchMethodError at runtime."
Working With Java Data Types,Variable Initialization,What is the default value for an uninitialized instance variable of type double?,0,0.0,null,undefined,It depends on the JVM.,B,"Instance variables (fields) in Java are automatically initialized to their default values if not explicitly assigned. For numeric primitive types like double, the default value is 0.0."
Working With Java Data Types,Wrapper Classes,Which of the following statements will print true when executed?,System.out.println(Boolean.parseBoolean(""true""));,System.out.println(new Boolean(null));,System.out.println(new Boolean());,System.out.println(new Boolean(""True""));,System.out.println(new Boolean(""FALSE""));,A,"Boolean.parseBoolean(String) returns a primitive boolean. It returns true if the string is ""true"" (ignoring case). The other options either return false or cause compilation errors."
Working With Java Data Types,Object Lifecycle,How many objects are created by the time the main method finishes in this code: public class Creator { public Creator() { try { throw new Exception(); } catch (Exception e) {} } public static void main(String args) { Creator c1 = new Creator(); Creator c2 = new Creator(); Creator c3 = c1; } }?,2,3,4,5,6,C,"Two Creator objects are created (c1 and c2). Two Exception objects are created (one in each constructor call). c3 = c1 only creates a new reference, not a new object. Total: 4 objects."
Using Operators and Decision Constructs,Operator Precedence,What is the final value of result? int x = 5; int y = 10; int z = 15; boolean result = x < y && y < z || z > x;,true,false,Compilation error,Runtime error,Depends on JVM,A,"The expression evaluates as: (x < y && y < z) || z > x = (true && true) || true = true || true = true"
Using Operators and Decision Constructs,Ternary Operator,What will be printed by this code? int a = 10; int b = 20; String s = (a > b)? ""A is greater"" : (a < b)? ""B is greater"" : ""A and B are equal""; System.out.println(s);,A is greater,B is greater,A and B are equal,Compilation error,Runtime error,B,"Since a > b is false (10 > 20), it evaluates the second part. Since a < b is true (10 < 20), it returns ""B is greater""."
Using Operators and Decision Constructs,Switch Statement,What is the output of this code? public class Test { public static void main(String args) { int day = 2; switch (day) { case 1: System.out.print(""Monday""); case 2: System.out.print(""Tuesday""); case 3: System.out.print(""Wednesday""); default: System.out.print(""Invalid""); } } },Tuesday,TuesdayWednesday,TuesdayWednesdayInvalid,Compilation error,Runtime error,C,"The switch statement starts at case 2, prints ""Tuesday"", then falls through to case 3 (prints ""Wednesday""), then falls through to default (prints ""Invalid"")."
Using Operators and Decision Constructs,Equality Operators,What will this code print? String s1 = ""Java""; String s2 = new String(""Java""); System.out.println(s1 == s2); System.out.println(s1.equals(s2));,true true,false false,true false,false true,Compilation error,D,"s1 == s2 compares references (false - different objects). s1.equals(s2) compares content (true - same content)."
Creating and Using Arrays,Array Declaration,Which of the following array declarations are valid?,int[] numbers = new int[5];,int[] numbers = new int[5];,int[] numbers = {1, 2, 3};,int[] numbers; numbers = new int[5];,All of the above.,E,"All listed options are valid ways to declare and initialize arrays in Java."
Creating and Using Arrays,Multi-dimensional Arrays,What is the output of this code? int[][] matrix = new int[2][]; matrix[0] = new int[]{1, 2}; matrix[1] = new int[]{3, 4, 5}; System.out.println(matrix[0].length + matrix[1].length);,5,6,7,Compilation error,Runtime error,A,"matrix[0].length is 2, matrix[1].length is 3. Total: 2 + 3 = 5."
Using Loop Constructs,For Loop,What is the output of this code? for (int i = 0; i < 5; i++) { if (i == 2) continue; System.out.print(i); },01234,0134,0123,1234,Compilation error,B,"The loop prints 0, 1, skips 2 (due to continue), prints 3, 4. Output: 0134"
Using Loop Constructs,Do-While Loop,What is the output of this code? int count = 5; do { System.out.print(count-- + "" ""); } while (count >= 0);,5 4 3 2 1 0,5 4 3 2 1,4 3 2 1 0,-1 0 1 2 3 4 5,Compilation error,A,"The do-while loop executes at least once. It prints 5, 4, 3, 2, 1, 0 then stops when count becomes -1."
Using Loop Constructs,Break and Continue,What is the output of this code? String[] arr = {""A"", ""B"", ""C"", ""D""}; for (String s : arr) { if (s.equals(""B"")) continue; if (s.equals(""D"")) break; System.out.print(s); },AC,ABC,ABCD,A,Compilation error,A,"The loop prints A, skips B (continue), prints C, then breaks at D. Output: AC"
Working with Methods and Encapsulation,Method Overloading,Which add method will be called? public class Calculator { public void add(int a, int b) { System.out.println(""int sum""); } public void add(double a, double b) { System.out.println(""double sum""); } public void add(long a, long b) { System.out.println(""long sum""); } public static void main(String args) { Calculator calc = new Calculator(); calc.add(10, 20); } },int sum,double sum,long sum,Compilation error,Runtime error,A,"Both arguments are int literals, so the most specific matching method add(int, int) is called."
Working with Methods and Encapsulation,Static Keyword,What is the output of this code? public class Counter { static int count = 0; public Counter() { count++; } public static void main(String args) { Counter c1 = new Counter(); Counter c2 = new Counter(); System.out.println(Counter.count); } },0,1,2,Compilation error,Runtime error,C,"The static variable count is shared by all instances. Each constructor call increments it: c1 increments to 1, c2 increments to 2."
Working with Methods and Encapsulation,Constructors,Given: class A { public A(int x) {} } class B extends A { public B(int x, int y) { super(x); } } Which constructor can be added to class B without causing a compile-time error?,B() {},B(int y) { j = y; },B(int y) { super(y*2); j = y; },B(int y) { i = y; j = y*2; },B(int z) { this(z, z); },C,"Class A only has A(int x), so any B constructor must call super(int). Option C explicitly calls super(y*2) which is valid."
Working with Methods and Encapsulation,Access Modifiers,Which access modifier allows a member to be accessed only within its own class?,public,protected,private,default,static,C,"The private access modifier restricts access to members to only within the class where they are declared."
Working with Methods and Encapsulation,Encapsulation,Which three members must have the public access modifier removed to ensure the area invariant is maintained? public class Triangle { public int base; public int height; public double area; public Triangle(int base, int height) { this.base = base; this.height = height; updateArea(); } void updateArea() { area = base * height / 2; } public void setBase(int b) { base = b; updateArea(); } public void setHeight(int h) { height = h; updateArea(); } },the base field,the height field,the area field,the Triangle constructor,the setBase method,A,"To protect the invariant that area equals base * height / 2, the base, height, and area fields should be private to prevent direct external modification."
Working with Inheritance,Polymorphism,What is the output of this code? class Animal { public void makeSound() { System.out.println(""Animal sound""); } } class Dog extends Animal { public void makeSound() { System.out.println(""Woof""); } } public class Test { public static void main(String args) { Animal myDog = new Dog(); myDog.makeSound(); } },Animal sound,Woof,Compilation error,Runtime error,None of the above.,B,"Although myDog is declared as Animal, it points to a Dog object. Polymorphism ensures the Dog's makeSound() method is called."
Working with Inheritance,Method Overriding vs Field Hiding,What will this code print? class Parent { public int value = 10; public void printValue() { System.out.println(""Parent: "" + value); } } class Child extends Parent { public int value = 20; public void printValue() { System.out.println(""Child: "" + value); } } public class Test { public static void main(String args) { Parent p = new Child(); System.out.println(p.value); p.printValue(); } },10,20,Parent: 10,Child: 20,10 Child: 20,E,"Field access depends on reference type (p.value accesses Parent's value = 10). Method calls use polymorphism (Child's printValue() is called, printing ""Child: 20"")."
Working with Inheritance,Abstract Classes and Interfaces,Which statement about abstract classes and interfaces is true?,A class can implement multiple abstract classes.,An interface can have concrete methods before Java 8.,An abstract class can have constructors.,All methods in an interface must be abstract.,An abstract class cannot have any concrete methods.,C,"An abstract class can have constructors, though they cannot be directly instantiated. They are used when a concrete subclass is instantiated."
Handling Exceptions,Checked vs Unchecked,Which of the following is an unchecked exception?,IOException,SQLException,FileNotFoundException,NullPointerException,InterruptedException,D,"NullPointerException is a RuntimeException and thus an unchecked exception. The others are checked exceptions."
Handling Exceptions,Try-Catch Block,What is the output of this code? public class ExceptionTest { public static void main(String args) { try { int[] numbers = new int[5]; System.out.println(numbers[5]); } catch (ArrayIndexOutOfBoundsException e) { System.out.println(""Array Index Error""); } catch (Exception e) { System.out.println(""General Error""); } finally { System.out.println(""Finally Block""); } } },Array Index Error,General Error,Array Index Error Finally Block,General Error Finally Block,Compilation error,C,"Accessing numbers[5] throws ArrayIndexOutOfBoundsException, caught by the first catch block. The finally block always executes."
Handling Exceptions,Method Throwing Exception,What is correct about this code? class A { public void doA() throws Exception { throw new Exception(); } } class B extends A { public void doB() { doA(); } },The code compiles and runs without error.,The code compiles if throws Exception is added to doB().,The code compiles if throws Exception is added to main().,The code compiles if throws Exception is added to doB() AND main().,The code compiles if doA() is enclosed in a try-catch block within doB().,D,"doA() throws a checked exception, so doB() must either handle it or declare it. If doB() declares it, then main() must also handle or declare it."
Working with Java API - String and StringBuilder,String Immutability,What will this code print? public class StringTest { public static String modifyString(String text) { text.concat("" World""); text.replace('o', 'X'); return text; } public static void main(String args) { String message = ""Hello""; System.out.println(modifyString(message)); } },Hello World,HellX WXrld,Hello,HellX,Compilation error,C,"String objects are immutable. The concat() and replace() methods return new String objects, but their return values are not assigned back to text."
Working with Java API - Time and Date,LocalDateTime,Which is a valid way to create a LocalDateTime object?,java.time.LocalDate.parse(""2023-01-01"");,java.time.LocalDateTime.parse(""2023-01-01"");,java.time.LocalDateTime.of(2023, 1, 1, 10, 30);,java.time.LocalDateTime.of(2023, ""January"", 1, 10, 30);,new java.time.LocalDateTime();,C,"LocalDateTime.of(2023, 1, 1, 10, 30) is a valid static factory method call taking year, month (as int), day, hour, and minute."
Working with Java API - ArrayList,ArrayList Usage,What will be the output of this code? List<String> list = new ArrayList<>(); list.add(""apple""); list.add(""banana""); list.add(""apple""); System.out.println(list.remove(""apple"") + "" "" + list.size());,true 2,false 3,true 3,false 2,Compilation error,A,"The remove(Object o) method removes the first occurrence of ""apple"" and returns true. The list becomes [""banana"", ""apple""] with size 2."
Using Operators and Decision Constructs,Compound Assignment,What is the value of x after this code executes? int x = 10; x += 5; x /= 3; x %= 2;,0,1,2,3,Compilation error,B,"x starts at 10, becomes 15 after +=5, becomes 5 after /=3 (integer division), becomes 1 after %=2."
Working With Java Data Types,Casting Primitives,What is the output of this code? double d = 10.5; int i = (int) d; System.out.println(i);,10.5,10,11,Compilation error,Runtime error,B,"When a double is cast to an int, the decimal part is truncated (not rounded). So 10.5 becomes 10."
Java Basics,Platform Independence,Which statement is true about Java bytecode?,It can run on any platform.,It can run on any platform only if it was compiled for that platform.,It can run on any platform that has the Java Runtime Environment.,It can run on any platform that has a Java compiler.,It can run on any platform only if that platform has both the JRE and a Java compiler.,C,"Java bytecode is platform-independent and can run on any platform that has a Java Virtual Machine (JVM), which is part of the Java Runtime Environment (JRE)."
Working with Methods and Encapsulation,Pass-by-Value,What will this program print? public class ChangeTest { private int myValue = 0; public void showOne(int myValue) { myValue = myValue; } public void showTwo(int myValue) { this.myValue = myValue; } public static void main(String args) { ChangeTest ct = new ChangeTest(); ct.showTwo(200); System.out.println(ct.myValue); ct.showOne(100); System.out.println(ct.myValue); } },0 followed by 100.,100 followed by 100.,0 followed by 200.,100 followed by 200.,200 followed by 200.,E,"showTwo() correctly assigns the parameter to the instance variable using this.myValue. showOne() assigns the parameter to itself due to variable shadowing, not affecting the instance variable. Result: 200 followed by 200."
Working With Java Data Types,Autoboxing/Unboxing,What is the output of this code? Integer a = 10; Integer b = 10; Integer c = 200; Integer d = 200; System.out.println(a == b); System.out.println(c == d);,true true,true false,false true,false false,Compilation error,B,"Integer values between -128 and 127 are cached, so a and b refer to the same object (true). Values outside this range create new objects, so c and d are different objects (false)."
Working with Inheritance,Casting Objects,What is the output of this code? class A {} class B extends A {} public class Test { public static void main(String args) { A objA = new B(); B objB = (B) objA; System.out.println(""Cast successful""); } },Cast successful,Compilation error,Runtime error (ClassCastException),Runtime error (other),None of the above.,A,"The code compiles and runs successfully. objA refers to a B object, so casting it to B is valid at runtime."
Working with Java API - Time and Date,Period,What will be the output? import java.time.LocalDate; import java.time.Period; public class DateTest { public static void main(String args) { LocalDate date = LocalDate.of(2023, 3, 27); Period period = Period.ofDays(1); date = date.plus(period); System.out.println(date); } },2023-03-27,2023-03-28,2023-03-26,Compilation error,Runtime error,B,"LocalDate.of(2023, 3, 27) creates March 27, 2023. Adding Period.ofDays(1) creates a new LocalDate for March 28, 2023."
Working with Java API - StringBuilder,StringBuilder Methods,What is the output of this code? StringBuilder sb = new StringBuilder(""Hello""); sb.append("" World"").insert(0, ""Java ""); System.out.println(sb);,Hello World Java,Java Hello World,Java Hello World,Java World Hello,Compilation error,C,"StringBuilder is mutable. append("" World"") makes it ""Hello World"". insert(0, ""Java "") inserts at the beginning, making it ""Java Hello World""."
Working with Methods and Encapsulation,Default Constructors,Given the class: class MyClass { int x; } Which statement is true about its constructor?,It has an implicit public no-argument constructor.,It has an implicit default constructor that initializes x to 0.,It requires an explicit constructor to be defined.,It will not compile without a constructor.,It has an implicit private no-argument constructor.,B,"If no constructor is explicitly defined, Java provides a default no-argument constructor that initializes instance variables to their default values (int x to 0)."
Using Operators and Decision Constructs,Unary Operators,What is the value of result? int x = 5; int y = ++x; int z = y--; int result = x + y + z;,15,16,17,18,Compilation error,C,"x starts at 5. y = ++x makes x = 6, y = 6. z = y-- makes z = 6, y = 5. result = 6 + 5 + 6 = 17."
Working with Inheritance,Reference Type vs Object Type,What will this code print? class Baap { public int h = 4; public int getH() { System.out.println(""Baap "" + h); return h; } } public class Beta extends Baap { public int h = 44; public int getH() { System.out.println(""Beta "" + h); return h; } public static void main(String args) { Baap b = new Beta(); System.out.println(b.h + "" "" + b.getH()); } },4 4,4 44,44 4,44 44,Compilation error,B,"Field access uses reference type (b.h accesses Baap's h = 4). Method calls use object type (Beta's getH() is called, which prints ""Beta 44"" and returns 44). Final output: ""Beta 44"" then ""4 44""."
Working With Java Data Types,Local Variable Initialization,What will this code print? public class Discounter { static double percent; public static double calc(double value) { int coupon, offset, base; if (percent < 10) { coupon = 15; offset = 20; base = 10; } return coupon * offset * base * value / 100; } public static void main(String args) { System.out.println(calc(100)); } },3000.0,3000,Compilation error at return statement,Exception at run time.,None of the above.,C,"Local variables must be explicitly initialized before use. The compiler cannot guarantee that coupon, offset, and base are initialized, causing a compile-time error."
Working with Inheritance,Interface Default Methods,What is correct about this code? interface House { public default String getAddress() { return ""101 Main Str""; } } interface Bungalow extends House { public default String getAddress() { return ""101 Smart Str""; } } class MyHouse implements Bungalow, House { },Code for interface House will cause compilation to fail.,Code for interface Bungalow will cause compilation to fail.,Code for class MyHouse will cause compilation to fail.,The code will compile successfully and print ""101 Smart Str"".,The code will compile successfully and print ""101 Main Str"".,D,"The code is valid. A sub-interface can override a default method of its base interface. MyHouse inherits Bungalow's getAddress() method which returns ""101 Smart Str""."
Using Loop Constructs,Labeled Loops,What will this code print? void crazyLoop() { int c = 0; JACK: while (c < 8) { JILL: System.out.println(c); if (c > 3) break JACK; else c++; } },It will not compile.,It will throw an exception at runtime.,It will print numbers from 0 to 8,It will print numbers from 0 to 3,It will print numbers from 0 to 4,E,"The loop prints c (0,1,2,3,4) and breaks when c > 3, which happens after printing 4."
Working With Java Data Types,Primitive vs Reference,What will be the output of this code? public class ValueTest { public static void modify(int val) { val = val + 10; } public static void modify(Integer val) { val = val + 10; } public static void main(String args) { int p = 5; Integer w = 5; modify(p); modify(w); System.out.println(p + "" "" + w); } },5 5,5 15,15 5,15 15,Compilation error,A,"Java is pass-by-value. For primitives, the copy is modified. For objects, reassigning the local reference doesn't affect the original reference. Both p and w remain unchanged."
Working with Methods and Encapsulation,Static Fields and Methods,What is the output of this code? public class StaticTest { static int x = 10; static { x += 5; } public static void main(String args) { System.out.println(x); } static { x += 10; } },10,15,25,Compilation error,Runtime error,C,"Static initializers execute in order when the class is loaded. x starts at 10, first static block adds 5 (x=15), second static block adds 10 (x=25)."
Working with Inheritance,Constructor Chaining,What is the output of this code? class Base { public Base() { System.out.print(""Base""); } } class Derived extends Base { public Derived() { System.out.print(""Derived""); } public Derived(String s) { this(); System.out.print(s); } } public class Test { public static void main(String args) { new Derived(""Hello""); } },BaseDerivedHello,DerivedHello,BaseDerived,BaseHello,Compilation error,A,"new Derived(""Hello"") calls Derived(String), which calls this() (Derived()), which implicitly calls super() (Base()). Order: Base prints ""Base"", Derived() prints ""Derived"", then ""Hello"" is printed."
Handling Exceptions,Common Exception Classes,Which of the following will cause an ArithmeticException at runtime?,int x = 10 / 0;,String s = null; s.length();,int[] arr = new int[5]; arr[5] = 1;,Object o = new String(""test""); Integer i = (Integer) o;,int x = Integer.parseInt(""abc"");,A,"Division by zero (10 / 0) causes ArithmeticException. The others cause NullPointerException, ArrayIndexOutOfBoundsException, ClassCastException, and NumberFormatException respectively."
Working with Java API - String,String Methods,What is the output of this code? String text = ""programming""; System.out.println(text.substring(3, 7));,gram,gramm,ogram,ogramm,Compilation error,A,"substring(3, 7) extracts characters from index 3 to 6 (7 is exclusive). In ""programming"": index 3='g', 4='r', 5='a', 6='m'. Result: ""gram""."
Working with Java API - ArrayList,ArrayList Methods,What is the output of this code? ArrayList<Integer> numbers = new ArrayList<>(); numbers.add(10); numbers.add(20); numbers.add(1, 15); numbers.remove(0); System.out.println(numbers);,[20],,[15, 20],,[10, 15, 20],Compilation error,B,"Initial: []. add(10): [10]. add(20): [10, 20]. add(1, 15): [10, 15, 20]. remove(0): [15, 20]."
Working with Java API - Time and Date,DateTimeFormatter,Which will correctly format a LocalDate object to ""01/15/2023""?,LocalDate.of(2023, 1, 15).format(DateTimeFormatter.ofPattern(""MM/dd/yyyy""));,LocalDate.of(2023, 1, 15).format(DateTimeFormatter.ofPattern(""dd/MM/yyyy""));,LocalDate.of(2023, 1, 15).format(DateTimeFormatter.ISO_LOCAL_DATE);,LocalDate.of(2023, 1, 15).format(new DateTimeFormatter(""MM/dd/yyyy""));,Compilation error,A,"DateTimeFormatter.ofPattern(""MM/dd/yyyy"") creates the correct formatter for Month/Day/Year format."
Java Basics,Variable Scope,What is the output of this code? public class ScopeTest { public static void main(String args) { int x = 10; { int y = 20; System.out.println(x + y); } System.out.println(x); } },30 10,30 20,Compilation error,Runtime error,30,A,"Variables declared within a block are only accessible within that block. x is accessible throughout main, y is only accessible in the inner block. Output: 30 (x+y), then 10 (x)."
Using Operators and Decision Constructs,Bitwise Operators,What is the output of this code? int a = 5; int b = 3; System.out.println(a | b);,1,3,5,7,Compilation error,D,"Bitwise OR operation: 5 (0101) | 3 (0011) = 7 (0111)."
Creating and Using Arrays,Array Initialization,Which of the following will cause a compile-time error?,int[] arr = new int[5];,int[] arr = {1, 2, 3};,int[] arr = new int[]{1, 2, 3};,int[] arr; arr = {1, 2, 3};,int[] arr = new int[3] {1, 2, 3};,E,"When using an initializer list with 'new int', you cannot specify the array size. The size is determined by the number of elements."
Using Loop Constructs,Enhanced For Loop,What is the output of this code? ArrayList<String> names = new ArrayList<>(); names.add(""Alice""); names.add(""Bob""); names.add(""Charlie""); for (String name : names) { if (name.equals(""Bob"")) { names.remove(name); } System.out.print(name + "" ""); },Alice Bob Charlie,Alice Charlie,Alice Bob,Compilation error,Runtime error (ConcurrentModificationException),E,"Modifying a collection while iterating over it using an enhanced for loop leads to ConcurrentModificationException at runtime."
Working with Methods and Encapsulation,Return Values,Given the method: public int calculate(int a, int b) { return a + b; } Which is a valid call to this method?,calculate(1, 2);,int result = calculate(1, 2);,System.out.println(calculate(1, 2));,All of the above.,None of the above.,D,"All options are valid ways to call a method with a return value: ignoring the return value, assigning it to a variable, or using it in a print statement."
Working with Inheritance,Super and This,What is the output of this code? class SuperClass { int x = 10; public SuperClass(int x) { this.x = x; } } class SubClass extends SuperClass { int x = 20; public SubClass() { super(30); System.out.println(super.x + "" "" + this.x); } },10 20,30 20,10 30,30 30,Compilation error,B,"super(30) sets SuperClass's x to 30. super.x refers to SuperClass's x (30), this.x refers to SubClass's x (20). Output: ""30 20""."
Handling Exceptions,Catching Multiple Exceptions,Which is the correct order for catch blocks if both Exception and IOException might be thrown?,catch (Exception e) {} catch (IOException e) {},catch (IOException e) {} catch (Exception e) {},The order does not matter.,It will not compile with both catch blocks.,None of the above.,B,"More specific exceptions must be caught before more general ones. IOException is more specific than Exception, so it must come first."
Working with Java API - String,String Pool,How many String objects are created in the String pool and on the heap? String s1 = ""Hello""; String s2 = ""Hello""; String s3 = new String(""Hello""); String s4 = s3.intern();,1 in pool 2 on heap,1 in pool 1 on heap,2 in pool 1 on heap,2 in pool 2 on heap,3 in pool 1 on heap,B,"s1 creates ""Hello"" in pool. s2 refers to same pooled string. s3 creates new String on heap. s4.intern() returns reference to existing pooled string. Total: 1 in pool, 1 on heap."
Java Basics,Features of Java,Which of the following is NOT a core feature of Java?,Platform Independence,Object Orientation,Pointers,Automatic Memory Management,Multi-threading,C,"Java is designed without explicit pointers for security and simplified memory management. The other options are all core features of Java."
Working With Java Data Types,Boxing/Unboxing,What is the output of this code? Integer num1 = 100; int num2 = num1; num1++; System.out.println(num1 + "" "" + num2);,100 100,101 100,100 101,101 101,Compilation error,B,"num1 refers to Integer(100), num2 gets unboxed value 100. num1++ creates new Integer(101). num2 remains 100. Output: ""101 100""."
Using Operators and Decision Constructs,Switch with String,What will be the output of this code? public class SwitchTest { public static void main(String args) { String key = ""HELLO""; switch (key) { case ""hello"": System.out.print(""lower""); break; case ""HELLO"": System.out.print(""UPPER""); case ""Hello"": System.out.print(""Mixed""); default: System.out.print(""Default""); } } },UPPER,UPPERMixed,UPPERMixedDefault,lower,Compilation error,C,"key matches ""HELLO"" case, prints ""UPPER"". No break, so falls through to ""Hello"" case (prints ""Mixed""), then to default (prints ""Default""). Output: ""UPPERMixedDefault""."
Creating and Using Arrays,Array of Objects,What is the output of this code? String[] names = new String[3]; System.out.println(names[0]);,null,empty string,Compilation error,Runtime error,undefined,A,"When an array of objects is created, elements are initialized to null. names[0] is null."
Using Loop Constructs,Infinite Loop,What will this code print? int i = 0; while (i < 5) { System.out.print(i); },01234,000... (infinite loop),Compilation error,Runtime error,None of the above.,B,"i is never incremented, so the condition i < 5 remains true forever, printing 0 infinitely."
Working with Methods and Encapsulation,Method Signature,Which method declaration is a valid overload for public void process(int a, String b)?,public void process(String b, int a),public int process(int a, String b),public void process(int x, String y),public void process(int a, String b, double c),public void process(int a, String b) throws IOException,A,"Method overloading requires different parameter lists. Option A changes the parameter order, making it a valid overload."
Working with Inheritance,Overloading vs Overriding,What is the output of this code? class A { public void method(Object o) { System.out.println(""Object""); } } class B extends A { public void method(String s) { System.out.println(""String""); } } public class Test { public static void main(String args) { A obj = new B(); obj.method(""test""); } },Object,String,Compilation error,Runtime error,None of the above.,A,"The method in B overloads (not overrides) the method in A. Since obj is of reference type A, the compiler chooses the method available in A that can accept a String, which is method(Object)."
Handling Exceptions,Finally Block,What is the output of this code? public class FinallyTest { public static void main(String args) { try { System.out.println(""Try""); throw new RuntimeException(); } catch (Exception e) { System.out.println(""Catch""); return; } finally { System.out.println(""Finally""); } } },Try Catch Finally,Try Catch Finally RuntimeException,Try Catch,Try Finally,Compilation error,A,"The finally block always executes, even when there's a return statement in the catch block. Output: ""Try"", ""Catch"", ""Finally""."
Working with Java API - String,String Comparison,What is the output of this code? String s1 = ""hello""; String s2 = ""HELLO""; System.out.println(s1.equalsIgnoreCase(s2)); System.out.println(s1.equals(s2));,true true,true false,false true,false false,Compilation error,B,"equalsIgnoreCase() ignores case differences (true). equals() considers case (false). Output: ""true false""."
Working with Java API - Time and Date,LocalDate,What is the output of this code? import java.time.LocalDate; public class DateManipulation { public static void main(String args) { LocalDate date = LocalDate.of(2024, 2, 29); date = date.plusDays(1); System.out.println(date); } },2024-02-29,2024-03-01,2024-03-02,Compilation error,Runtime error,B,"LocalDate.of(2024, 2, 29) creates February 29, 2024 (leap year). plusDays(1) adds one day, creating March 1, 2024."
Working with Java API - ArrayList,Generics,Which ArrayList declaration will cause a compile-time error?,ArrayList list = new ArrayList();,ArrayList<String> list = new ArrayList<String>();,ArrayList<Object> list = new ArrayList<String>();,ArrayList<Integer> list = new ArrayList<>();,ArrayList<Number> list = new ArrayList<Integer>();,C,"Due to generic invariance, ArrayList<String> cannot be assigned to ArrayList<Object> even though String is a subtype of Object."
Java Basics,Comments,Which type of comment is used for Javadoc documentation?,// single line comment,/* multi-line comment */,/** Javadoc comment */,# shell-style comment,<!-- HTML comment -->,C,"Javadoc comments start with /** and end with */. They are used to generate API documentation."
Working With Java Data Types,Literals,Which of the following is a valid float literal?,10.0f,10.0d,10,10.0,""10.0"",A,"A float literal must be suffixed with 'f' or 'F'. Without a suffix, 10.0 is a double literal."
Using Operators and Decision Constructs,Increment/Decrement,What is the output of this code? int x = 10; System.out.println(x++ + ++x);,20,21,22,23,Compilation error,C,"x++ uses current value 10 then increments x to 11. ++x increments x to 12 then uses 12. Result: 10 + 12 = 22."
Creating and Using Arrays,Array of Primitives Default Values,What is the output of this code? int[] arr = new int[3]; System.out.println(arr[0] + arr[1] + arr[2]);,0,1,2,Compilation error,Runtime error,A,"Arrays of primitive numeric types are initialized to their default value (0 for int). 0 + 0 + 0 = 0."
Using Loop Constructs,Nested Loops,What is the output of this code? for (int i = 0; i < 2; i++) { for (int j = 0; j < 2; j++) { if (i == 1 && j == 1) break; System.out.print(""("" + i + "","" + j + "")""); } },(0,0)(0,1)(1,0)(1,1),(0,0)(0,1)(1,0),(0,0)(0,1)(1,0)(1,1) (infinite loop),Compilation error,Runtime error,B,"The loops print (0,0), (0,1), (1,0), then break when i==1 && j==1 before printing (1,1)."
Working with Methods and Encapsulation,Method Arguments,What will be the output of this code? public class MethodTest { public static void changeValue(int val) { val = 100; } public static void main(String args) { int data = 50; changeValue(data); System.out.println(data); } },50,100,Compilation error,Runtime error,None of the above.,A,"Java uses pass-by-value. A copy of data (50) is passed to val. Modifying val doesn't affect the original data variable."
Working with Inheritance,Interface Evolution (Java 8),Which statement is true about interfaces in Java 8?,Interfaces can have private methods.,Interfaces can have abstract methods default methods and static methods.,Interfaces can have constructors.,Interfaces can extend classes.,Interfaces can implement other interfaces.,B,"Java 8 introduced default and static methods to interfaces, in addition to abstract methods. Private methods were added in Java 9."
Handling Exceptions,Exception Hierarchy,Which exception type is a subclass of RuntimeException?,IOException,SQLException,ClassNotFoundException,IllegalArgumentException,InterruptedException,D,"IllegalArgumentException is a direct subclass of RuntimeException (unchecked). The others are checked exceptions."
Working with Java API - String,String Immutability,What is the output of this code? String s = ""abc""; s.concat(""def""); System.out.println(s);,abcdef,abc,def,Compilation error,Runtime error,B,"String objects are immutable. concat() returns a new String but doesn't modify the original. Since the return value isn't assigned back to s, s remains ""abc""."
Working with Java API - StringBuilder,StringBuilder Capacity,What is the initial capacity of a StringBuilder object created with no arguments?,11,16,17,34,Compilation error,B,"When a StringBuilder is created with no arguments, its initial capacity is 16 characters."
Java Basics,Class Components,Which of the following is NOT a component of a Java class?,Field,Method,Constructor,Interface,Nested Class,D,"A Java class consists of fields, methods, constructors, and nested classes. An interface is a separate construct, not a component of a class."
Working With Java Data Types,Object Reference Variables,What is the output of this code? String s1 = ""Java""; String s2 = s1; s1 = ""Python""; System.out.println(s2);,Java,Python,null,Compilation error,Runtime error,A,"String objects are immutable. s2 refers to the same ""Java"" object as s1. When s1 is reassigned to ""Python"", s2 still refers to the original ""Java"" object."
Using Operators and Decision Constructs,Ternary Operator Nesting,What will be printed? int x = 1; int y = 2; int z = x++; int a = --y; int b = z--; b += ++z; int answ = x > a? y > b? y : b : x > z? x : z; System.out.println(answ);,0,1,2,3,-1,C,"After all operations: x=2, y=1, z=1, a=1, b=2. The ternary expression evaluates to b=2."
Using Loop Constructs,Loop Comparison,Which loop construct guarantees execution of its body at least once?,for loop,while loop,do-while loop,enhanced for loop,None of the above.,C,"The do-while loop evaluates its condition after executing the body, guaranteeing at least one execution."
Working with Methods and Encapsulation,Accessing Members,What is the output of this code? public class AccessTest { private int value = 10; public static void main(String args) { AccessTest at = new AccessTest(); System.out.println(at.value); } },10,0,Compilation error,Runtime error,None of the above.,A,"Private members are accessible within the same class. Since main() is part of AccessTest, it can access the private value field."
Working with Inheritance,Polymorphic Method Call,Which line will print the name of the Eagle object? interface Flyer { String getName(); } class Bird implements Flyer { public String name; public Bird(String name) { this.name = name; } public String getName() { return name; } } class Eagle extends Bird { public Eagle(String name) { super(name); } } Flyer f = new Eagle(""American Bald Eagle"");,System.out.println(f.name);,System.out.println(f.getName());,System.out.println(((Eagle) f).name);,System.out.println(Eagle.name);,System.out.println(Eagle.getName(f));,B,"f is of type Flyer which declares getName(). The polymorphic call will invoke the implementation from the actual object type."
Handling Exceptions,Exception Handling Advantages,Which is an advantage of the Java exception mechanism?,Provides a set of standard exceptions that covers all possible errors.,Allows the creation of new exceptions customized to the particular program.,Improves program structure by separating error handling code from normal program flow.,Improves program structure because exceptions must be handled in the method in which they occur.,All of the above.,C,"The main advantage is separating error-handling logic from normal business logic, leading to cleaner and more readable code."
Working with Java API - String,StringBuilder vs String,Which statement is true about String and StringBuilder in Java?,String is mutable StringBuilder is immutable.,Both String and StringBuilder are mutable.,String objects are stored on the heap StringBuilder objects are stored in the String pool.,StringBuilder is more efficient for frequent string modifications than String.,String is thread-safe StringBuilder is not.,D,"StringBuilder is mutable and more efficient for frequent modifications. String is immutable and creates new objects for each modification."
Working with Java API - Time and Date,LocalTime,Which is a valid way to create a LocalTime object?,LocalTime time = new LocalTime(10, 30);,LocalTime time = LocalTime.of(10, 30);,LocalTime time = LocalTime.parse(""10:30 AM"");,LocalTime time = LocalTime.now().plusHours(2);,All of the above are valid.,B,"LocalTime.of(10, 30) is a valid static factory method. LocalTime doesn't have public constructors."
Working with Java API - ArrayList,Removing Elements,What will this code print? List<String> s1 = new ArrayList<>(); s1.add(""a""); s1.add(""b""); s1.add(""c""); s1.add(""a""); System.out.println(s1.remove(""a"") + "" "" + s1.remove(""x""));,true false,true true,false false,false true,Compilation error,A,"remove(""a"") removes first occurrence and returns true. remove(""x"") returns false since ""x"" is not found."
Java Basics,Package Declaration,Which statement about package declarations is true?,A Java source file can have multiple package declarations.,The package declaration must be the first statement in a Java source file.,If a package is not declared the class belongs to the java.lang package.,If a package is not declared the class belongs to the default package.,Package names must start with a capital letter.,D,"A source file can have at most one package declaration. If no package is declared, the class belongs to the default package."
Working With Java Data Types,Primitive Type Sizes,Which primitive data type has a size of 4 bytes?,byte,short,int,long,char,C,"byte=1 byte, short=2 bytes, int=4 bytes, long=8 bytes, char=2 bytes."
Using Operators and Decision Constructs,Switch with Boolean,What will this code print? public class TestClass { public static void main(String args) { boolean flag = true; switch (flag) { case true: System.out.println(""true""); default: System.out.println(""false""); } } },It will not compile.,false,true false,Exception at run time.,true,A,"Switch statements cannot use boolean expressions. Only String, byte, char, short, int, their wrapper classes, or enum types are allowed."
Creating and Using Arrays,Array Bounds,What is the output of this code? int[] numbers = {1, 2, 3}; System.out.println(numbers[3]);,3,Compilation error,Runtime error (ArrayIndexOutOfBoundsException),Runtime error (NullPointerException),None of the above.,C,"Arrays are zero-indexed. For an array of size 3, valid indices are 0, 1, 2. Accessing index 3 throws ArrayIndexOutOfBoundsException."
Using Loop Constructs,Loop Control,What will be the output of this code? int i = 0; while (i < 10) { i++; if (i % 2 == 0) continue; System.out.print(i); },13579,02468,123456789,246810,Compilation error,A,"The loop increments i first, then checks if even (continue skips print for even numbers). Only odd values are printed: 1,3,5,7,9."
Working with Methods and Encapsulation,Overloading Resolution,What will be printed? class TestClass { void probe(Object x) { System.out.println(""In Object""); } void probe(Number x) { System.out.println(""In Number""); } void probe(Integer x) { System.out.println(""In Integer""); } public static void main(String args) { double a = 10; new TestClass().probe(a); } },In Number,In Object,In Integer,Compilation error,Runtime error,A,"double autoboxes to Double. Double extends Number, so probe(Number) is the most specific applicable method."
Working with Inheritance,Covariant Return Types,What can be substituted for XXX and YYY? class A { public XXX m1(int a) { return a * 10 / 4 - 30; } } class A2 extends A { public YYY m1(int a) { return a * 10 / 4.0; } },int int,int double,double double,double int,Nothing they are not compatible.,C,"For overriding, return types must be same or covariant. double can accommodate int results, and double can be returned as double."
Handling Exceptions,Method Signature and Throws,Which method declaration is valid?,public void method() throws Exception { throw new IOException(); },public void method() { throw new IOException(); },public void method() throws IOException { throw new Exception(); },public void method() throws RuntimeException { throw new IOException(); },public void method() { throw new RuntimeException(); },E,"Unchecked exceptions (RuntimeException) don't require declaration in throws clause. Option E is valid."
Working with Java API - String,String Concatenation,What is the output of this code? String s = ""1""; s += 2; s += '3'; System.out.println(s);,123,12,13,Compilation error,Runtime error,A,"String concatenation with += converts the operands to strings. ""1"" + 2 = ""12"", ""12"" + '3' = ""123""."
Java Basics,Import Statements,Which statement about import statements is true?,They must appear before the package declaration.,They are optional if using fully qualified names.,They can import multiple specific classes with a single statement using a wildcard.,They can import specific methods from a class.,All of the above.,B,"Import statements are optional if you use fully qualified names. They must appear after package declaration and cannot import specific methods (only classes or static members)."
Working With Java Data Types,Default Values for Arrays,What will this program print? public class TestClass { static boolean b; static int[] ia = new int[1]; static char ch; static boolean[] ba = new boolean[1]; public static void main(String args) { boolean x = false; if (b) { x = (ch == ia[ch]); } else { x = (ba[ch] = b); } System.out.println(x + "" "" + ba[ch]); } },true true,true false,false true,false false,It will not compile.,D,"All static fields initialize to defaults: b=false, ia[0]=0, ch='\u0000' (0), ba[0]=false. Since b is false, else block executes: ba[0]=b assigns false to ba[0] and returns false. Result: false false."
Using Operators and Decision Constructs,Comparison Operators,What is the output of this code? System.out.println(10 > 5 && 20 < 30); System.out.println(10 == 10 || 5 != 5);,true true,true false,false true,false false,Compilation error,A,"First: 10>5 is true, 20<30 is true, true&&true=true. Second: 10==10 is true, 5!=5 is false, true||false=true."
Creating and Using Arrays,Array Copying,What is the output of this code? int[] arr1 = {1, 2, 3}; int[] arr2 = arr1; arr2[0] = 10; System.out.println(arr1[0]);,1,10,Compilation error,Runtime error,None of the above.,B,"arr2 = arr1 copies the reference, not the array. Both variables refer to the same array. Modifying arr2[0] also affects arr1[0]."
Using Loop Constructs,For Loop Initialization,What is the output of this code? for (int i = 0, j = 10; i < j; i++, j--) { System.out.print(""("" + i + "","" + j + "")""); },0 10 1 9 2 8 3 7 4 6,0 10 1 9 2 8 3 7 4 5,0 10 1 9 2 8 3 7 4 6 5 5,0 10 1 9 2 8 3 7,Compilation error,A,"Loop continues while i<j. Iterations: (0,10), (1,9), (2,8), (3,7), (4,6), then i=5 and j=5 so i<j is false."
Working with Methods and Encapsulation,Static Method Call,Which is a valid way to call the static method printMessage() from outside its class Utils?,Utils.printMessage();,new Utils().printMessage();,printMessage(); (if in same package),Both A and B are valid.,Only A is valid.,A,"Static methods should be called using the class name. While option B might work, it's bad practice as it implies instance method usage."
Working with Inheritance,Instanceof Operator,What is the output of this code? class Animal {} class Dog extends Animal {} public class Test { public static void main(String args) { Animal a = new Dog(); System.out.println(a instanceof Animal); System.out.println(a instanceof Dog); } },true true,true false,false true,false false,Compilation error,A,"a refers to a Dog object. Since Dog is an Animal (inheritance), both instanceof checks return true."
Handling Exceptions,Catching Specific Exceptions,What is the output of this code? public class ExceptionOrder { public static void main(String args) { try { String s = null; System.out.println(s.length()); } catch (RuntimeException e) { System.out.println(""RuntimeException""); } catch (NullPointerException e) { System.out.println(""NullPointerException""); } } },RuntimeException,NullPointerException,Compilation error,Runtime error,None of the above.,C,"Compilation error: more specific exceptions (NullPointerException) must be caught before more general ones (RuntimeException)."
Working with Java API - String,String Equality,What is the output of this code? String s1 = ""Hello""; String s2 = ""Hello""; String s3 = new String(""Hello""); System.out.println(s1 == s2); System.out.println(s1 == s3); System.out.println(s1.equals(s3));,true true true,true false true,false false true,true false false,Compilation error,B,"s1 and s2 refer to the same pooled literal (==true). s3 is a new object (==false). equals() compares content (true)."
Working with Java API - Time and Date,Period and Duration,Which statement about Period and Duration is true?,Period represents a time-based amount Duration represents a date-based amount.,Both Period and Duration are immutable.,Period is used for hours minutes seconds; Duration for years months days.,Period can be negative Duration cannot.,Period and Duration can be added to LocalDateTime interchangeably.,B,"Both Period and Duration are immutable. Period is for date-based amounts (years, months, days), Duration is for time-based amounts."
Working with Java API - ArrayList,ArrayList Capacity,What is the initial capacity of an ArrayList created with no arguments?,0,5,10,16,Compilation error,C,"ArrayList's default constructor creates an array with initial capacity of 10."
Java Basics,Main Method Arguments,What will be the output when running: java MyClass Hello World? public class MyClass { public static void main(String[] args) { System.out.println(args[0] + args[1]); } },HelloWorld,Hello World,Hello,Compilation error,Runtime error (ArrayIndexOutOfBoundsException),A,"Command line arguments are stored in args array. args[0]=""Hello"", args[1]=""World"". String concatenation produces ""HelloWorld""."
Working With Java Data Types,Wrapper Class Constructors,Which Boolean constructor call will cause a compile-time error?,new Boolean(true);,new Boolean(""true"");,new Boolean(""FALSE"");,new Boolean();,new Boolean(null);,D,"Boolean has constructors Boolean(boolean) and Boolean(String), but no no-argument constructor."
Using Operators and Decision Constructs,Post/Pre Increment,What is the output of this code? int x = 5; int y = 5; System.out.println(x++ + "" "" + ++y); System.out.println(x + "" "" + y);,5 6 then 6 6,6 6 then 5 6,5 6 then 6 7,5 6 then 6 6,Compilation error,A,"First line: x++ uses 5 then increments x to 6, ++y increments y to 6 then uses 6. Output: ""5 6"". Second line: x=6, y=6. Output: ""6 6""."
Working with Inheritance,Superclass Constructor Call,Which statement is true regarding super() and this() in Java constructors?,super() and this() can be called anywhere in a constructor.,super() must be the first statement in a constructor if present.,this() must be the first statement in a constructor if present.,A constructor can call both super() and this().,super() and this() can only be called in static methods.,C,"Both super() and this() must be the first statement if present. A constructor can call either super() or this(), but not both."
Handling Exceptions,Custom Exceptions,Which is true about creating a custom checked exception in Java?,It must extend RuntimeException.,It must extend Error.,It must extend Throwable directly.,It must extend Exception or a subclass of Exception (but not RuntimeException).,It must extend IOException.,D,"Custom checked exceptions must extend Exception or its subclasses, excluding RuntimeException and its subclasses (which are unchecked)."
Working with Java API - String,String Formatting,What is the output of this code? System.out.printf(""Value: %d%n"", 123);,Value: 123,Value: %d,Value: 123.0,Value: 123\n,Compilation error,A,"printf uses format specifiers. %d formats integers, %n produces a platform-specific newline. Output: ""Value: 123"" followed by newline."
Working with Java API - ArrayList,Iterating ArrayList,What is the output of this code? ArrayList<String> list = new ArrayList<>(); list.add(""A""); list.add(""B""); for (int i = 0; i < list.size(); i++) { System.out.print(list.get(i) + "" ""); },A B,A B C,Compilation error,Runtime error,None of the above.,A,"The for loop iterates from 0 to list.size()-1. list.get(0) returns ""A"", list.get(1) returns ""B"". Output: ""A B ""."
Java Basics,Class Definition,Which is a valid Java class definition?,class MyClass { public MyClass() {} },public class MyClass { public static void main(String[] args) {} },class MyClass extends AnotherClass {},interface MyInterface { void method(); },All of the above are valid class or interface definitions.,E,"All options show valid ways to define classes or interfaces in Java."
Working With Java Data Types,Object References,What is the output of this code? Object obj1 = new Object(); Object obj2 = obj1; obj1 = null; System.out.println(obj2);,null,java.lang.Object@... (memory address),Compilation error,Runtime error,undefined,B,"obj2 refers to the same Object instance as obj1 initially did. Setting obj1 to null doesn't affect obj2, which still refers to the original Object instance."
