domain,topic,question_text,option_a,option_b,option_c,option_d,option_e,correct_answer,explanation
Creating and Using Arrays,Array Declaration and Initialization,"What will be the output of the following program code?

public class Main {
    public static void main(String args[]) {
        int[] arr = new int[10];
        System.out.println(""Accessing Element Eleven: "" + arr[10]);
    }
}","Compilation Fails.","ArrayIndexOutOfBoundsException","Accessing Element Eleven: 0","NoDataFoundException",,"B","Array is declared with 10 elements (indices 0-9). The code tries to access index 10, which is the 11th element that doesn't exist, throwing ArrayIndexOutOfBoundsException."
Handling Exceptions,Exception Handling,"Choose the correct option to complete the following program code.

1. public void method() _____ Exception {
2.     _____ new Exception();
3. }","throws in line 1 and throw in line 2","throws new in line 1 and throw in line 2","throw new in line 1 and throws in line 2","throws in line 1 and throws new in line 2","throw in line 1 and throw new in line 2","A","In method declaration, the keyword 'throws' is used to declare exceptions. To actually throw an exception, the keyword 'throw' is used with 'new' to create the exception instance."
Creating and Using Arrays,Array Declaration and Initialization,"Which exception will the following statement generate?

int array[] = new int[-2];","NullPointerException","NegativeArraySizeException","ArrayIndexOutOfBoundsException","IndexOutOfBoundsException","The statement executes without any exception.","B","When creating an array with a negative size, Java throws NegativeArraySizeException because array sizes must be non-negative."
Using Loop Constructs,For Loops,"What will be the output of the following program code?

public class Main {
    public static void main(String[] args) {
        int sum = 0;
        
        for(int x = 0; x < 10; x++)
            sum += x;
        System.out.print(""sum for 0 to "" + x);
        System.out.println("" = "" + sum);
    }
}","sum for 0 to 9 = 45","sum for 0 to 10 = 45","Compilation fails due to an error in line 6.","Compilation fails due to an error in line 7.","Runtime Exception","D","The scope of loop variable 'x' is limited to the for loop block. Trying to access 'x' outside the loop (in the print statement) causes a compilation error because 'x' is not in scope."
Java Basics,Simple Execution of Java Program,"Which of the following is valid for compiling a Java source file named ""Main.java""?","javac Main.java","java Main.class","java Main.java","javac Main","java Main","A","The Java compiler is invoked with the 'javac' command. When compiling a Java class, you must include the complete filename with the .java extension."
Working With Java Data Types,Variable Declaration and Initialization,"What will be the output of this program code?

public class Main {
    public static void main(String[] args) {
        String str = ""1200"";
        int num = Integer.parseInt(str);
        System.out.println(num);
    }
}","0","1200","Runtime exception NumberFormatException is generated.","Compilation fails due to an error at line 6.","Compilation fails due to an error at line 9.","B","The string ""1200"" is a valid integer representation, so Integer.parseInt() successfully converts it to the integer 1200 and prints it."
Using Loop Constructs,Enhanced For Loops,"Which option can replace the condition in the enhanced for loop?

public class Main {
    public static void main(String[] args) {
        int[] testData = {1, 2, 3};
        for(_____ : testData) {
            System.out.println(i);
        }
    }
}","int i","int i = 0; i < 3; i++","i = 0; i < 3; i++","int i, j","i < 3","A","Enhanced for loops (for-each) require a variable declaration that matches the array element type. 'int i' correctly declares the loop variable to iterate over the int array elements."
Handling Exceptions,Exception Handling,"Which exception is most likely to occur with the following code?

public static void main(String[] args) {
    Float number = Float.valueOf(args[0]);
}","IllegalArgumentException","NumberFormatException","ArrayIndexOutOfBoundsException","NullPointerException","ClassCastException","B","If args[0] contains a string that cannot be parsed as a float (like ""abc""), Float.valueOf() will throw NumberFormatException. ArrayIndexOutOfBoundsException could also occur if no arguments are passed, but NumberFormatException is more specific to the valueOf operation."
Working With Java Data Types,Variable Declaration and Initialization,"Which of the following is a valid identifier?","_2DPoint","$ocajp","2DPoint","java@elabs","$*coffee","A","Java identifiers can start with a letter, underscore (_), or dollar sign ($). They cannot start with a digit or contain special characters like @ or *. '_2DPoint' and '$ocajp' are valid, but '_2DPoint' is option A."
Working with Methods and Encapsulation,Access Modifiers,"What is the output of the following code?

package epracticelabs;
public class A {
    protected int y = 15;
}

package elab;
import epracticelabs.A;
public class B extends A {
    int y = 10;
    public void print() {
        A a = new A();
        System.out.println(a.y + y);
    }
}","20","25","30","Compilation fails due to error at line 14","Compilation fails due to multiple errors","E","The code has multiple issues: B cannot access the protected field 'y' of class A through an instance (a.y) from a different package, and there's variable shadowing with the field 'y' in class B."
Java Basics,Import Statements,"Which lines contain redundant imports that are not necessary for this code to compile?

import java.util.Random;
import java.lang.System;
import java.util.*;
import java.lang.*;

public class MyExamCloudOcajps {
    public static void main(String[] args) {
        Random r = new Random();
        System.out.println(r.nextInt(10));
    }
}","Only lines 1 and 2","Only lines 1,2 and 3","Only lines 2,3 and 4","Only lines 1,3 and 4","All","C","Line 2 (java.lang.System) is redundant because java.lang.* is imported by default. Line 3 (java.util.*) makes line 1 redundant. Line 4 (java.lang.*) is always redundant as it's automatically imported."
Working with Selected classes from the Java API,Date Time API,"What is the output of the following code?

import java.time.LocalDate;

public class MyExamCloudOCajps {
    public static void main(String[] args) {
        LocalDate date = LocalDate.parse(""2014-12-30"");
        date = date.plusDays(2);
        date.plusHours(12);
        System.out.println(date.getYear() + "" "" + date.getMonth() + "" "" + date.getDayOfMonth());
    }
}","2015 JANUARY 1","2015 JANUARY 2","2014 JANUARY 3","An exception is thrown","Compilation fails","E","LocalDate class doesn't have a plusHours() method. Hours are handled by LocalTime or LocalDateTime classes, so the code fails to compile."
Working with Inheritance,Interfaces,"Which of the following method declarations can be included in an interface?","static void print() { System.out.println(""interface""); }","static abstract void print()","default abstract void print()","default String toString() { return ""a""; }","None of above","A","Interfaces can have static methods with implementation (since Java 8). Static methods cannot be abstract, and default methods cannot be abstract either. Option A is valid - a static method with implementation."
Java 8 Features,Lambda Expressions,"Which of the following can be considered as enhancements in Java 8?

1. Support for Lambda Expressions
2. Multiple inheritance
3. Default methods in interfaces
4. Date and Time API","Only 1","Only 2","Only 1 and 3","Only 1, 3, and 4","Only 2 and 4","D","Java 8 introduced Lambda Expressions (1), default methods in interfaces (3), and a new Date and Time API (4). Java still doesn't support multiple inheritance of classes (2)."
Working With Java Data Types,Variable Declaration and Initialization,"What is the output of the following code?

public class MyExamCloudOCAIPs {
    static int y = 10;
    
    public static void main(String[] args) {
        int y;
        System.out.println(y + MyExamCloudOCAIPs.y);
    }
}","10","11","20","NullPointerException","Compilation error","E","Local variable 'y' is declared but not initialized. Java requires local variables to be initialized before use, causing a compilation error."
Working With Java Data Types,Wrapper Classes,"Which of the following will convert the string to a primitive float?

String str = ""1.2"";","Float.parseFloat(str)","Float.valueOf(str)","new Float(str)","(float) str","All of the above","A","Float.parseFloat() returns a primitive float. Float.valueOf() and new Float() return Float wrapper objects, not primitives. (float) str won't compile as you cannot cast a String to float."
Using Operators and Decision Constructs,Operators,"What is the output of the following code?

public class Test {
    public static void main(String[] args) {
        int a = 5, b = 7;
        int result = a + b;
        System.out.println(result);
    }
}","10","11","12","13",,"C","The code adds 5 + 7 = 12 and prints the result."
Java Basics,Main Method,"Which of the following is a valid main method?","public static int main(String[] args)","public void main(String args[])","public static void main(String[] args)","static void main(String args)",,"C","The main method must be public, static, void, and take String array as parameter. Only option C meets all requirements."
Working with Selected classes from the Java API,String Class,"What will be the result of the following code?

String s = ""Hello"";
s.concat("" World"");
System.out.println(s);","Hello","Hello World","World","Compilation Error",,"A","Strings are immutable in Java. The concat method returns a new String but doesn't modify the original. Since the result isn't assigned back to s, s remains ""Hello""."
Working With Java Data Types,Variable Declaration and Initialization,"What is the default value of a boolean variable in a class?","true","false","0","null",,"B","Instance variables of boolean type are automatically initialized to false in Java."
Working With Java Data Types,Variable Declaration and Initialization,"Which one is not a Java keyword?","static","Integer","void","if",,"B","'Integer' is a class name, not a keyword. Keywords are reserved words like static, void, and if."
Creating and Using Arrays,Arrays,"Which statement is true about Java arrays?","Arrays are dynamically sized.","Arrays can store different data types.","The size of an array must be specified at declaration.","Arrays are objects in Java.",,"D","In Java, arrays are objects. They have a fixed size once created, store elements of the same type, and inherit from Object class."
Using Operators and Decision Constructs,Logical Operators,"Which operator is used to perform a short-circuit AND?","&","|","&&","||",,"C","The && operator performs short-circuit AND evaluation, meaning if the first operand is false, the second operand is not evaluated."
Working with Selected classes from the Java API,String Class,"Which of the following classes is immutable?","StringBuilder","String","StringBuffer","All of the above",,"B","String class is immutable - once a String object is created, it cannot be changed. StringBuilder and StringBuffer are mutable."
Using Operators and Decision Constructs,Operators,"What is printed by the following code?

int i = 10;
int j = 5;  
int result = i++ + ++j;
System.out.println(result);","15","16","17","18",,"B","i++ uses the current value (10) then increments i to 11. ++j increments j to 6 first, then uses that value. So 10 + 6 = 16."
Java Basics,Main Method,"What is the return type of the main() method?","void","int","String","Object",,"A","The main method must have a void return type as specified in the Java Language Specification."
Working with Inheritance,Inheritance,"Which keyword is used to inherit a class?","implement","interface","inherits","extends",,"D","The 'extends' keyword is used for class inheritance in Java. 'implements' is used for interfaces."
Working with Methods and Encapsulation,Access Modifiers,"Which of these access specifiers allows access only within the same class?","private","public","protected","default",,"A","The private access modifier restricts access to the same class only. Other modifiers allow broader access."
Working With Java Data Types,Primitive Data Types,"Which of the following is not a primitive type?","int","float","char","String",,"D","String is a class (reference type), not a primitive type. The primitive types are int, float, char, boolean, byte, short, long, and double."
Handling Exceptions,Exception Handling,"Which exception is thrown when dividing an integer by zero in Java?","NullPointerException","ArithmeticException","IllegalArgumentException","NumberFormatException",,"B","Integer division by zero throws ArithmeticException in Java."
Working with Inheritance,Abstract Classes,"How do you declare an abstract method?","public void doIt();","public void doIt() {}","abstract void doIt();","void abstract doIt();",,"C","Abstract methods are declared with the 'abstract' keyword and have no method body (no curly braces)."
Collections Framework,Set Object,"Which collection class maintains insertion order?","HashMap","TreeSet","LinkedHashSet","HashSet",,"C","LinkedHashSet maintains the insertion order of elements. HashMap and HashSet don't guarantee order, TreeSet maintains sorted order."
Working With Java Data Types,Primitive Data Types,"What is the size of a char in Java?","4 bytes","2 bytes","1 byte","Depends on JVM",,"B","A char in Java is 2 bytes (16 bits) to support Unicode characters."
Using Operators and Decision Constructs,Switch Statement,"Which of the following is not allowed in a switch statement?","int","String","boolean","char",,"C","Switch statements don't support boolean type directly. They support int, char, String (since Java 7), and enum types."
Advanced Java Features,Threads,"Which interface must be implemented to create a thread in Java?","Runnable","Thread","Callable","Executor",,"A","The Runnable interface must be implemented to create a thread. Thread is a class, not an interface."
Working with Selected classes from the Java API,String Class,"Which method is used to get the length of a string in Java?","length()","size()","getSize()","count()",,"A","The length() method returns the number of characters in a String object."
Using Operators and Decision Constructs,Operators,"What will the following code print?

public class Q21 {
    public static void main(String[] args) {
        int x = 20;
        int y = 1;
        System.out.println(x + y);
    }
}","21","22","20","19",,"A","The code adds 20 + 1 = 21 and prints the result."
Using Operators and Decision Constructs,Comparison Operators,"What will the following code print?

public class Q22 {
    public static void main(String[] args) {
        boolean result = (5 > 3);
        System.out.println(result);
    }
}","true","false","Compilation Error","Runtime Exception",,"A","The expression (5 > 3) evaluates to true, which is then printed."
Using Operators and Decision Constructs,Logical Operators,"What will the following code print?

public class Q23 {
    public static void main(String[] args) {
        boolean a = true;
        boolean b = false;
        System.out.println(a && !b);
    }
}","true","false","Compilation Error","Runtime Exception",,"A","The expression evaluates as: true && !false = true && true = true."
Using Operators and Decision Constructs,Bitwise Operators,"What will the following code print?

public class Q24 {
    public static void main(String[] args) {
        int a = 10;  // 1010 in binary
        int b = 6;   // 0110 in binary  
        System.out.println(a & b);
    }
}","10","8","7","2",,"D","Bitwise AND of 1010 & 0110 = 0010 = 2 in decimal."
Using Loop Constructs,For Loops,"What will the following code print?

public class Q25 {
    public static void main(String[] args) {
        for(int i = 1; i <= 3; i++) {
            System.out.print(i + "" "");
        }
    }
}","1 2 3 ","3 2 1 ","1 2 3 4 ","Compilation Error",,"A","The loop prints i from 1 to 3: ""1 2 3 ""."
Working with Selected classes from the Java API,String Class,"What will the following code print?

public class Q26 {
    public static void main(String[] args) {
        String s = null;
        String result = s + ""world"";
        System.out.println(result);
    }
}","world","nullworld","Compilation Error","NullPointerException",,"B","When concatenating with null, Java converts null to the string ""null"", resulting in ""nullworld""."
Using Operators and Decision Constructs,Comparison Operators,"What will the following code print?

public class Q27 {
    public static void main(String[] args) {
        String a = new String(""hello"");
        String b = new String(""hello"");
        System.out.println(a == b);
    }
}","true","false","Compilation Error","NullPointerException",,"B","The == operator compares references, not content. Since a and b are different objects, the result is false."
Creating and Using Arrays,Arrays,"What will the following code print?

public class Q28 {
    public static void main(String[] args) {
        int[] arr = {0, 1, 2, 3};
        System.out.println(arr[2]);
    }
}","2","1","3","0",,"A","Array indexing starts at 0, so arr[2] accesses the third element, which is 2."
Using Operators and Decision Constructs,Operators,"What will the following code print?

public class Q29 {
    public static void main(String[] args) {
        int a = 8;
        int b = 8;
        System.out.println(a + b);
    }
}","16","13","10","8",,"A","The code adds 8 + 8 = 16 and prints the result."
Working With Java Data Types,Variable Declaration and Initialization,"What will the following code print?

public class Q30 {
    public static void main(String[] args) {
        int[] arr = new int[3];
        System.out.println(arr[0]);
    }
}","0","null","Compilation Error","Exception",,"A","Arrays of primitive int are initialized with default value 0."
Working with Selected classes from the Java API,String Class,"What will the following code print?

public class Q31 {
    public static void main(String[] args) {
        String s = ""ABC"";
        s.toLowerCase();
        System.out.println(s);
    }
}","abc","ABC","Compilation Error","NullPointerException",,"B","Strings are immutable. The toLowerCase() method returns a new string but doesn't modify the original string s."
Using Loop Constructs,For Loops,"What will the following code print?

public class Q32 {
    public static void main(String[] args) {
        for(int i = 0; i < 3; i++) {
            System.out.print(i + "" "");
        }
    }
}","0 1 2 ","0 1 2 3 ","1 2 3 ","Infinite loop",,"A","The loop prints i from 0 to 2: ""0 1 2 ""."
Working with Selected classes from the Java API,String Class,"What will the following code print?

public class Q33 {
    public static void main(String[] args) {
        String s1 = ""hello"";
        String s2 = ""hello"";
        System.out.println(s1.equals(s2));
    }
}","true","false","Compilation Error","Exception",,"A","The equals() method compares the content of strings, both contain ""hello"", so the result is true."
Working with Selected classes from the Java API,String Class,"What will the following code print?

public class Q34 {
    public static void main(String[] args) {
        String s = ""Java"";
        System.out.println(s.charAt(2));
    }
}","v","a","J","Compilation Error",,"A","String indexing starts at 0. charAt(2) returns the character at index 2, which is 'v'."
Working With Java Data Types,Variable Declaration and Initialization,"What will the following code print?

public class Q35 {
    public static void main(String[] args) {
        int x = 10;
        int y = 20;
        System.out.println(y);
    }
}","10","20","0","Compilation Error",,"B","The code simply prints the value of variable y, which is 20."
Using Operators and Decision Constructs,If-Else Statement,"What will the following code print?

public class Q36 {
    public static void main(String[] args) {
        int x = 5;
        if(x > 10) {
            System.out.println(""Greater"");
        } else if(x < 3) {
            System.out.println(""Smaller"");  
        }
    }
}","Greater","Smaller","Nothing","Runtime Exception",,"C","Since x=5 is not > 10 and not < 3, neither condition is true, so nothing is printed."
Working With Java Data Types,Variable Casting and Conversions,"What will the following code print?

public class Q37 {
    public static void main(String[] args) {
        int i = 128;
        byte b = (byte) i;
        System.out.println(b);
    }
}","127","128","-128","Compilation Error",,"C","byte range is -128 to 127. Value 128 overflows and wraps around to -128."
Working With Java Data Types,Variable Casting and Conversions,"What will the following code print?

public class Q38 {
    public static void main(String[] args) {
        String s1 = ""10"";
        String s2 = ""30"";
        System.out.println(s1 + s2);
    }
}","40","1030","3010","4030",,"B","String concatenation occurs, not arithmetic addition, resulting in ""1030""."
