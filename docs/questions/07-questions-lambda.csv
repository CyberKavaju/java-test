domain,topic,question_text,option_a,option_b,option_c,option_d,option_e,correct_answer,explanation
Java 8 Features,Lambda Expressions,"Which statement about lambda expressions in Java is true?","They can have multiple abstract methods","They are valid only inside classes","They implement functional interfaces","They must always use return keyword","They are only used in interfaces",C,"Lambdas work with functional interfaces, which have exactly one abstract method."
Java 8 Features,Lambda Expressions,"Which of the following is a correct lambda syntax with one parameter and no type declaration?","x -> x + 1","(int x) => x + 1","x => x + 1","(x): x + 1","x -> return x + 1",A,"For a single parameter with no type, parentheses are optional. 'x -> x + 1' is valid syntax."
Java 8 Features,Lambda Expressions,"Which lambda expression correctly returns true if a string is empty?","s -> s.length() == 0","(s) -> return s == null;","s => s.equals("")","(String s) => s.isEmpty()","() -> s.isEmpty()",A,"A valid lambda to test string emptiness is 's -> s.length() == 0' or 's -> s.isEmpty()'. Option A uses correct syntax and logic."
Java 8 Features,Lambda Expressions,"What is the output of the following code?
```java
Consumer<String> c = s -> System.out.println(s.toUpperCase());
c.accept(""lambda"");
```","lambda","LAMBDA","null","Compilation error","Runtime exception",B,"The lambda converts the string to upper case: output is 'LAMBDA'."
Java 8 Features,Lambda Expressions,"Which functional interface is best used to return a value based on input?","Predicate","Consumer","Runnable","Function","Comparator",D,"`Function<T, R>` takes input and returns a result. Perfect for transformation use cases."
Java 8 Features,Lambda Expressions,"Which of these is NOT a valid lambda?","() -> System.out.println(""Hi"")","(a, b) -> a + b","x -> return x * 2;","x -> x * x","(int x) -> { return x; }",C,"The 'return' keyword requires a block body (using `{}`). The expression `x -> return x * 2;` is invalid because it mixes expression syntax with a `return` statement. It should be either `x -> x * 2` or `x -> { return x * 2; }`."
Java 8 Features,Lambda Expressions,"What does the following code print?
```java
Predicate<String> p = s -> s.isEmpty();
System.out.println(p.test(""""));
```","false","true","null","Compilation error","Runtime exception",B,"The empty string is passed to the predicate. Since it is empty, `isEmpty()` returns true."
Java 8 Features,Lambda Expressions,"Which method must be implemented in a `Runnable` lambda?","void start()","void go()","void execute()","void run()","void accept()",D,"`Runnable` has one method: `void run()`. Lambdas for `Runnable` must implement this."
Java 8 Features,Lambda Expressions,"Which of the following interfaces is NOT functional?","Runnable","Comparator","Function","Thread","Predicate",D,"`Thread` is a class, not a functional interface. Others each have one abstract method."
Java 8 Features,Lambda Expressions,"Choose the correct syntax for a lambda with no parameters.","() -> return 10","-> 10","() -> 10","return () -> 10","{} -> 10",C,"No parameter lambdas must include `()`. Correct form is `() -> 10`."
Java 8 Features,Lambda Expressions,"Which of these best describes the role of a lambda in Java?","It replaces loops","It enables multithreading","It allows passing behavior as data","It returns multiple values","It creates annotations",C,"Lambdas allow behavior (code blocks) to be passed as data, typically to methods."
Java 8 Features,Lambda Expressions,"What is the return type of a lambda implementing `Supplier<String>`?","boolean","int","void","String","Object",D,"`Supplier<T>` provides a result of type `T`. For `Supplier<String>`, return type is `String`."
Java 8 Features,Lambda Expressions,"Which lambda expression has a syntax error?","(a, b) -> a + b","x -> x * 2","(x) -> { return x + 1; }","a, b -> a + b","() -> System.out.println(""Hello"")",D,"You must use parentheses around parameters when there are two or more: '(a, b) -> a + b' is correct, 'a, b -> a + b' is not."
Java 8 Features,Lambda Expressions,"Which of the following is true about functional interfaces?","They must have more than one abstract method","They can have no abstract methods","They can have one abstract method only","They cannot have default methods","They must return void",C,"Functional interfaces must have exactly one abstract method. They can have default or static methods too."
Java 8 Features,Lambda Expressions,"What is the output?
```java
Function<Integer, Integer> square = x -> x * x;
System.out.println(square.apply(5));
```","25","10","5","Compilation error","Runtime exception",A,"5 squared is 25. `Function.apply()` returns the transformed value."
