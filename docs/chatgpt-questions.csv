domain,topic,question_text,option_a,option_b,option_c,option_d,option_e,correct_answer,explanation
Java Basics,Import Statements,What happens when compiling and running the following code? import java.util.Date; import java.sql.Date; class Test { public static void main(String[] args) { Date d = new Date(); } },"It prints the current date.","Compilation error: reference to Date is ambiguous.","Compilation error: cannot find symbol Date.","It prints 'null'.","Runtime exception (NullPointerException) is thrown.",B,"Two imports bring in classes named Date from different packages, making the reference to Date ambiguous. The code fails to compile because the compiler cannot determine which Date class to use."
Data Types,Primitive Casting and Overflow,What is the output of the following code? int i = 258; byte b = (byte) i; System.out.println(b);,258,2,0,-2,"Compilation error",B,"Casting an int to a byte results in overflow. The value 258 modulo 256 is 2, so the byte value is 2. The output is 2."
Data Types,Autoboxing and NullPointerException,What happens when the following code is executed? Integer i = null; int j = i;,j will be 0,j will be null,Compilation error,Runtime NullPointerException,j will be uninitialized,D,"Because i is null and unboxing occurs when assigning to int j, a NullPointerException is thrown at runtime."
Data Types,Wrapper Caching,What is the output of the following code? Integer i1 = 100, i2 = 100; System.out.println(i1 == i2); Integer i3 = 128, i4 = 128; System.out.println(i3 == i4);,"true true","true false","false true","false false","Compile error",B,"Java caches Integer objects for values in the range -128 to 127. Thus i1 and i2 refer to the same cached object (true), but i3 and i4 do not (false)."
Data Types,char Arithmetic,What does the following code print? char c = 'A' + 1; System.out.println(c);,A,B,65,Compile error,Runtime error,B,"'A' has ASCII value 65, adding 1 yields 66, which corresponds to 'B'. The code prints B."
Operators and Decision Constructs,Nested if/else,What does the following code print? int x = 5, y = 3; if (x < 10) if (y < 5) System.out.println("A"); else System.out.println("B");,"A","B",Nothing,Compile error,Runtime exception,A,"The else pairs with the nearest if. Here x < 10 and y < 5 are both true, so it prints \"A\". If y >= 5, it would print \"B\"; if x >= 10, nothing would be printed."
Operators and Decision Constructs,Switch Statement Fall-Through,What is the output of the following code? int i = 1; switch (i) { case 1: System.out.println("One"); case 2: System.out.println("Two"); },One Two,"One","Two",Compile error,Runtime error,A,"Without a break statement, execution falls through. With i=1, it prints \"One\" then continues to case 2 and prints \"Two\"."
Loop Constructs,Enhanced For Loop,What is the output of the following code? int[] arr = {1, 2, 3}; for (int x : arr) { x++; } System.out.println(arr[0]);,1,2,3,4,Compile error,A,"The enhanced for loop variable x is a copy of the array element. Incrementing x does not change the array. arr[0] remains 1."
Loop Constructs,do-while Loop,What does the following code print? int i = 3; do { System.out.println(i); } while (i < 3);,3,Nothing (no output),Infinite loop,Compile error,Runtime error,A,"A do-while loop executes its body at least once before checking the condition. Here i=3, so it prints 3 once."
Loop Constructs,Break Statement,What is the output of the following code? for (int i = 0; i < 3; i++) { if (i == 1) break; System.out.print(i); },012,01,0,1,Compile error,C,"When i becomes 1, the break statement terminates the loop. The loop prints i for i=0, then breaks out at i=1, so only 0 is printed."
Methods and Encapsulation,Pass by Value (primitive),What is the output of the following code? int i = 5; { int x = i; x = 10; } System.out.println(i);,5,10,Compile error,Runtime error,"5 then 10",A,"Variables are passed by value. The assignment x = i creates a copy. Changing x does not change i. The output is 5."
Methods and Encapsulation,Pass by Value (object reference),What is the output of the following code? StringBuilder sb = new StringBuilder("Hi"); modify(sb); System.out.println(sb); } public static void modify(StringBuilder b) { b.append("!"); },Hi!,Hi,!,Compile error,Runtime error,A,"Object references are passed by value. The method receives a copy of the reference but appending to the StringBuilder affects the original object. The output is \"Hi!\"."
Methods and Encapsulation,Method Overloading,What is the output of the following code? class A { void m(int i) { System.out.println("int"); } void m(long l) { System.out.println("long"); } } A a = new A(); a.m(5);,"int","long",Compile error,Runtime error,No output,A,"The literal 5 is an int, so the method with int parameter is chosen. It prints \"int\". If the int version were absent, it would have used m(long)."
Inheritance,Polymorphism (Method Overriding),What does the following code print? class A { void m() { System.out.println("A"); } } class B extends A { void m() { System.out.println("B"); } } A a = new B(); a.m();,"A","B","AB",Compile error,Runtime error,B,"The call is dynamically dispatched. Even though the reference is of type A, the actual object is a B, so B.m() is called, printing \"B\"."
Inheritance,Static Method Hiding,What is the output of the following code? class A { static void m() { System.out.println("A"); } } class B extends A { static void m() { System.out.println("B"); } } A a = new B(); a.m();,"A","B","AB",Compile error,Runtime error,A,"Static methods are not overridden; they are hidden. The method is resolved at compile time by reference type. Here a is of type A, so A.m() is called, printing \"A\"."
Inheritance,Constructors and super,What happens when compiling the following code? class A { A(int x) {} } class B extends A { B() {} },"It compiles successfully.","Compile error: no default constructor in A.","Runtime error.","It compiles but throws exception at runtime.","Unknown behavior.",B,"Class A has only a parameterized constructor and no default (no-arg) constructor. B's constructor must explicitly call super(x). Without it, the compiler cannot insert a default super() call, causing a compile error."
Exceptions,Checked vs Unchecked,Which of the following code snippets causes a compilation error? A: void m() { throw new RuntimeException(); } B: void m() { throw new Error(); } C: void m() throws Exception { throw new IOException(); } D: void m() { throw new IOException(); } E: void m() throws IOException { throw new IOException(); },"A only","D only","C and E","D and E","B and D",B,"Throwing RuntimeException or Error (unchecked) in a method requires no declaration. Declaring and throwing IOException works if declared or caught. D has no throws clause, so throw new IOException() is a compile error."
Exceptions,Finally Overrides Return,What is the output of the following code? public static int test() { try { return 1; } finally { return 2; } } System.out.println(test());,1,2,No output (program hangs),Compile error,Runtime exception,B,"The finally block executes even after a return in try. Its return overrides the tryâ€™s return. Thus test() returns 2."
Exceptions,Catch Order,What is the problem with the following code? try { } catch (Exception e) { } catch (ArithmeticException e) { },"No problem; it compiles.","Unreachable catch block for ArithmeticException.","Catch blocks must be in alphabetical order.","Multiple catch blocks require finally block.","Cannot catch specific exceptions after a general one.",B,"The catch for ArithmeticException is unreachable because Exception is a superclass. The more specific catch must come before the general one."
Arrays,Multi-dimensional arrays,What happens when executing the following code? int[][] arr = new int[2][]; arr[0] = new int[1]; System.out.println(arr[1][0]);,"Prints 0","Prints null","Runtime NullPointerException","Compile error","Runtime ArrayIndexOutOfBoundsException",C,"arr[1] was never initialized (it's null). Accessing arr[1][0] causes a NullPointerException at runtime."
Arrays,Array Reference Aliasing,What is the output of the following code? int[] a = {1, 2}; int[] b = a; b[0] = 3; System.out.println(a[0]);,1,2,3,Compile error,Runtime error,C,"Both a and b refer to the same array. Changing b[0] also changes a[0]. The array now contains [3,2], so a[0] is 3."
API Classes,StringBuilder append,What does the following code print? StringBuilder sb = new StringBuilder("Hello"); sb.append("World"); System.out.println(sb);,Hello,World,HelloWorld,Hello World,Runtime error,C,"StringBuilder.append adds to the existing sequence. After appending \"World\", sb contains \"HelloWorld\"."
API Classes,String immutability,What does the following code print? String s = "Hello"; s.concat("World"); System.out.println(s);,Hello,HelloWorld,World,Compilation error,Runtime error,A,"String is immutable. s.concat(\"World\") returns a new string, but s is unchanged. So it prints \"Hello\"."
API Classes,StringBuilder reverse,What is the output of this code? StringBuilder sb = new StringBuilder("abc"); sb.reverse(); System.out.println(sb);,abc,cba,Compilation error,Runtime error,acb,B,"StringBuilder.reverse() reverses the sequence. \"abc\" becomes \"cba\"."
API Classes,LocalDate plusDays,What does the following code print? LocalDate date = LocalDate.of(2020, 1, 31); date = date.plusDays(1); System.out.println(date);,2020-01-32,2020-02-01,Compile error,Runtime error,None of the above,B,"LocalDate handles month rollovers. Adding one day to January 31, 2020 yields February 1, 2020, printed as 2020-02-01."
API Classes,DateTimeFormatter,What does this code print? DateTimeFormatter fmt = DateTimeFormatter.ofPattern("MM/dd/yyyy"); System.out.println(LocalDate.of(2020,1,5).format(fmt));,"01/05/2020","1/5/2020","05/01/2020",Compile error,Runtime error,A,"The pattern MM/dd/yyyy formats month and day with two digits. January 5, 2020 is printed as 01/05/2020."
API Classes,ArrayList basic,What is the output of the following code? List<String> list = new ArrayList<>(); list.add("a"); list.add("b"); System.out.println(list.size());,1,2,Compile error,Runtime error,0,B,"Two elements were added to the list. list.size() returns the number of elements, which is 2."
API Classes,ArrayList remove,What does the following code print? List<String> list = new ArrayList<>(); list.add("one"); list.add("two"); list.remove(1); System.out.println(list.get(0));,one,two,Compile error,Runtime error,None of the above,A,"list.remove(1) removes the element at index 1 (\"two\"). The list now contains [\"one\"], so get(0) returns \"one\"."
API Classes,Lambda Predicate,What does the following code print? Predicate<String> p = s -> s.startsWith("A"); System.out.println(p.test("Apple"));,true,false,Compile error,Runtime error,Nothing,A,"The lambda defines a Predicate<String> testing start with \"A\". \"Apple\" starts with \"A\", so p.test(\"Apple\") returns true."
API Classes,Lambda Syntax,What is wrong with this code? Predicate<String> p = s -> return s.isEmpty();,"It compiles and always returns true","It compiles and always returns false","It causes a runtime exception","Compilation error","Nothing is wrong",D,"Lambda syntax: you cannot use 'return' in a lambda expression without braces. Either remove 'return' or use braces around the body. This code does not compile."
Operators and Decision Constructs,Ternary Operator Type,What is the output of the following code? int x = 5; long y = 10; System.out.println((true) ? x : y);,5,5L,10,Compile error,Runtime error,A,"The conditional operator returns the type that can hold both operands. x is promoted to long. Since the condition is true, it returns x (5), which is printed as 5."
Operators and Decision Constructs,Bitwise vs Logical Operators,What is the output? int a = 5, b = 10; if (a < 10 & b++ > 10) { } System.out.println(b);,10,11,Compile error,Runtime error,0,B,"Using & causes both sides to be evaluated. b++ is evaluated even though a<10 is true. After the test, b has been incremented from 10 to 11."
Operators and Decision Constructs,Switch with Strings,What is the output? String s = "Java"; switch (s) { case "java": System.out.println("Lower"); break; default: System.out.println("Default"); },Lower,Default,java,Compile error,Runtime error,B,"String comparisons in switch are case-sensitive. \"Java\" does not match \"java\", so the default case executes, printing \"Default\"."
Operators and Decision Constructs,Assignment in if condition,What does the following code print? boolean b = false; if (b = true) { System.out.println("Yes"); } else { System.out.println("No"); },Yes,No,Compile error,Runtime error,Nothing,A,"Inside if, b = true assigns true to b and the expression evaluates to true. Therefore \"Yes\" is printed."
Loop Constructs,Infinite loop with break,What is the output? for (;; ) { System.out.println("Hi"); break; },Hi,Compile error,Runtime error,Infinite loop,HiHi,A,"The for(;;) creates an infinite loop, but a break immediately exits the loop after printing once. So it prints \"Hi\" exactly once."
Arrays,Varargs,What is printed? public static void m(int... nums) { System.out.println(nums.length); } m(1, 2, 3);,1,3,0,Compile error,Runtime error,B,"Varargs collects all arguments into an array. nums contains [1,2,3], so its length is 3."
Inheritance,Private Method Hiding,What happens if you try to compile and run this? class A { private void m() {} } class B extends A { public void m() { System.out.println("B"); } } A a = new B(); a.m();,"It prints B","It prints nothing","Compile error","Runtime error","It prints A",C,"A has a private method m(), so B's m() is not an override but a new method. The reference a of type A cannot access m(). This code fails to compile (no visible method m in A)."
Inheritance,Constructor Chaining,What is the output of the following code? class A { public A() { System.out.print("A"); } } class B extends A { public B() { System.out.print("B"); } } new B();,A,B,AB,BA,Compile error,C,"Object construction calls super() by default. When creating new B(), A's constructor prints A, then B's prints B, resulting in \"AB\"."
Inheritance,Final Class,What happens when compiling this code? final class A {} class B extends A {},It compiles successfully.,Compile error: cannot inherit from final A.,Runtime error,No output,An exception is thrown,B,"A final class cannot be subclassed. Declaring B extends final A causes a compile-time error."
Inheritance,Abstract Class,What is wrong with the following code? abstract class A {} class B { public static void main(String[] args) { A a = new A(); } },It prints A,It prints nothing,Compile error: cannot instantiate abstract A.,Runtime error,It compiles successfully,C,"Abstract classes cannot be instantiated. Attempting to create new A() causes a compile-time error."
Methods and Encapsulation,Private Constructor,What happens if you try to compile and run this? class A { private A() {} } new A();,It compiles successfully.,Compile error: A() has private access.,Runtime error,It prints an empty line,None of the above,B,"The constructor A() is private, so it cannot be accessed from outside. Attempting new A() causes a compile-time access error."
Exceptions,Finally Always Executes,What is the output? try { System.out.println(1); } finally { System.out.println(2); },1,2,1 then 2,Compile error,Runtime exception,C,"The try block prints 1, and the finally block always executes after, printing 2. So it prints 1 then 2."
Exceptions,Catching RuntimeException,What is the output? try { System.out.println(1/0); } catch (Exception e) { System.out.println("Exception"); },1,Exception,No output,Runtime error,Compile error,B,"Division by zero causes an ArithmeticException, which is a subclass of Exception. The catch catches it and prints \"Exception\"."
Data Types,Narrowing Conversion,What happens when compiling this code? short s = 5; s = s + 2;,It compiles and runs, printing 7,Compile error: cannot convert int to short,It compiles with a warning,Runtime error,Nothing happens,B,"The expression s + 2 is of type int. Assigning int to short requires explicit cast. This code does not compile."
Data Types,Numeric Literals,What is wrong with the following declaration? long l = 10000000000;,No error; l is 10000000000,Compile error: integer number too large,It prints a random number,Runtime error,It becomes a double,B,"The literal 10000000000 is an int literal by default. It's too large for int. You must suffix L (10000000000L) for a long literal."
API Classes,ArrayList Raw Type,What happens when compiling this code? ArrayList list = new ArrayList(); list.add("a"); String s = list.get(0);,It compiles and s is "a",Compile error: incompatible types,Runtime error,Compile error: generic type,List will contain null,B,"Without generics, list.get(0) returns Object. Assigning an Object to String without a cast causes a compile-time type mismatch error."
Inheritance,Final Method,What happens when compiling this code? class A { final void m() {} } class B extends A { void m() {} },It compiles successfully,Compile error: cannot override final method,Runtime error,Method m() is hidden, not overridden,It prints nothing,B,"A final method cannot be overridden in a subclass. Defining m() in B causes a compile-time error."
Loops,Switch Fall-Through with Loops,What is the output? int n=0; for(int i=0;i<2;i++) { switch(i) { case 0: n+=10; case 1: n+=20; break; } } System.out.println(n);,20,30,50,60,Compile error,C,"Iteration i=0: hits case 0 (adds 10) then falls through to case 1 (adds 20). n=30. Iteration i=1: hits case 1 (adds 20). Total n=50."
Loops,Enhanced For Loop Modification,What happens when executing this code? List<String> list = new ArrayList<>(); list.add("a"); for (String s : list) { list.add("b"); },It prints a,It prints ab,Runs indefinitely,Throws ConcurrentModificationException,Compile error,D,"You cannot modify a collection while iterating with an enhanced for loop. Adding an element to list during iteration causes a ConcurrentModificationException at runtime."
Data Types,String null concatenation,What is the output? String s = null; System.out.println(s + "test");,"nulltest","test",Compilation error,Runtime NullPointerException,"null",A,"String concatenation with a null reference uses the string \"null\" for the null value. So s+\"test\" becomes \"nulltest\"."
